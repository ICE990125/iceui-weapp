// 这部分来着 codepen, 正经人谁会写这种东西
@import '../style/index.scss';

$color1: #ffffff33;
$color2: #c0c4cc;
$duration: 1s;

.i-loading__container {
  width: auto;
  height: auto;

  .shutter-loading {
    font-size: 0 !important;
    line-height: 0 !important;

    .leaf {
      position: relative;
      width: 50%;
      height: 50%;

      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        transform-origin: 100% 100%;
        animation: folding 2.5s infinite linear both;
      }
    }

    $deg: (
      0: (
        'deg': 0,
        'dur': 0,
        'color': $grey-1,
      ),
      1: (
        'deg': 90deg,
        'dur': 0.3s,
        'color': $grey-4,
      ),
      2: (
        'deg': 270deg,
        'dur': 0.9s,
        'color': $grey-3,
      ),
      3: (
        'deg': 180deg,
        'dur': 0.6s,
        'color': $grey-2,
      ),
    );

    @for $i from 0 through 3 {
      .leaf-#{$i} {
        $b: map-get($deg, $i);

        transform: rotateZ(map-get($b, 'deg'));

        &::before {
          animation-delay: map-get($b, 'dur');
          background-color: map-get($b, 'color');
        }
      }
    }

    // 折叠动画
    @keyframes folding {
      0%,
      10% {
        transform: perspective(140px) rotateX(-180deg);
        opacity: 0;
      }

      25%,
      75% {
        transform: perspective(140px) rotateX(0deg);
        opacity: 1;
      }

      90%,
      100% {
        transform: perspective(140px) rotateY(180deg);
        opacity: 0;
      }
    }
  }

  $color: (
    0: $grey-1,
    1: $grey-4,
    2: $grey-3,
    3: $grey-2,
  );

  @mixin t($i, $tx, $ty) {
    @if $i == 0 {
      transform: translate($tx, $ty);
    } @else if $i == 1 {
      transform: translate(-$ty, $tx);
    } @else if $i == 2 {
      transform: translate($ty, -$tx);
    } @else {
      transform: translate(-$tx, -$ty);
    }
  }

  @mixin p($i) {
    @if $i == 0 {
      left: 0;
    } @else if $i == 1 {
      right: 0;
    } @else if $i == 2 {
      bottom: 0;
    } @else {
      bottom: 0;
      right: 0;
    }
  }

  @mixin b($i) {
    @if $i == 0 {
      border-top-left-radius: 100%;
    } @else if $i == 1 {
      border-top-right-radius: 100%;
    } @else if $i == 2 {
      border-bottom-left-radius: 100%;
    } @else {
      border-bottom-right-radius: 100%;
    }
  }

  $r: (
    2: 10deg,
    3: 0,
    4: 45deg,
  );

  $a: (
    2: 120%,
    3: -30%,
    4: 100%,
  );

  @for $j from 2 through 4 {
    .shutter-loading-#{$j} {
      transform: rotate(map-get($r, $j));
      position: relative;

      @if $j != 4 {
        animation: rotation 1s infinite;
      }

      .leaf {
        position: absolute;

        @if $j == 2 {
          border-radius: 50%;
        }

        width: 50%;
        height: 50%;

        @each $i, $value in $color {
          &.leaf-#{$i} {
            @include p($i);

            @if $j == 3 {
              @include b($i);
            }

            $delay: 0s;
            $dir: alternate;

            @if $j == 4 {
              $delay: 2s;
              $dir: reverse;
            } @else {
              $delay: 0.5s;
            }

            background-color: map-get($color, $i);
            animation: a#{$i}-#{$j}
              $delay
              ease
              0s
              infinite
              $dir;

            $temp: map-get($a, $j);

            @if $j == 4 {
              @keyframes a#{$i}-#{$j} {
                0% {
                  transform: translate(0, 0);
                }
                25% {
                  @include t($i, 0, $temp);
                }
                50% {
                  @include t($i, $temp, $temp);
                }
                75% {
                  @include t($i, $temp, 0);
                }
              }
            } @else {
              @keyframes a#{$i}-#{$j} {
                from {
                  transform: translate(0, 0);
                }
                to {
                  @include t($i, $temp, $temp);
                }
              }
            }
          }
        }
      }
    }
  }

  @keyframes rotation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  .normal-loading {
    border-radius: 50%;
    width: 100%;
    height: 100%;
    border-top-color: rgba(255, 255, 255, 0.2);
    animation: spin $duration infinite linear;

    // 旋转动画
    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
  }

  .pulse-loading {
    @for $i from 1 through 4 {
      .pulse-#{$i} {
        width: 18%;
        height: 100%;
        margin: 0 3px;
        background: #c0c4cc;
      }
    }

    @for $i from 1 through 3 {
      .pulse-#{$i} {
        animation: pulse#{$i} $duration infinite;
      }

      @keyframes pulse#{$i} {
        50% {
          @if $i != 1 {
            height: 50%;
          }
          background: rgba(255, 255, 255, 0.2);
        }
      }
    }

    @for $i from 0 through 2 {
      .pulse-bar-#{$i} {
        animation-delay: 0.2s * $i;
      }
    }
  }

  // 文字
  .text {
    width: 70px;

    &::after {
      content: '';
      animation: dot $duration * 2 linear infinite;
    }

    // 加载字体动画
    @keyframes dot {
      0% {
        content: '';
      }
      25% {
        content: '.';
      }
      50% {
        content: '..';
      }
      75% {
        content: '...';
      }
    }
  }
}
